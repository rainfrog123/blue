//@version=6
indicator("TEMA Reversal TP/SL (2 R ATR Clean)", overlay=true, scale=scale.left, max_lines_count=500, max_labels_count=500)

// === INPUTS
tema_len  = input.int(50, "TEMA Length")
atr_len   = input.int(14, "ATR Length")
atr_mult  = input.float(3.0, "ATR Multiplier (1R)")
htf_tf    = input.timeframe("1", "ATR Timeframe")
seg_len   = input.int(5, "TP/SL Line Length")

// === TEMA
ema1 = ta.ema(close, tema_len)
ema2 = ta.ema(ema1, tema_len)
ema3 = ta.ema(ema2, tema_len)
tema = 3 * ema1 - 3 * ema2 + ema3
trend_up = tema > tema[1]
trend_down = tema < tema[1]
trend = trend_up ? "UP" : trend_down ? "DOWN" : "FLAT"
trend_flip = trend != trend[1]

// === ATR from higher timeframe
atr = request.security(syminfo.tickerid, htf_tf, ta.atr(atr_len))

// === Entry and risk levels
entry = close
risk  = atr * atr_mult
tp = trend == "UP" ? entry + 2 * risk : trend == "DOWN" ? entry - 2 * risk : na
sl = trend == "UP" ? entry - risk     : trend == "DOWN" ? entry + risk     : na

// === Store lines & labels
var line[] tp_lines = array.new_line()
var line[] sl_lines = array.new_line()
var label[] tp_labels = array.new_label()
var label[] sl_labels = array.new_label()

if trend_flip
    // Determine color
    // clr_tp = trend == "UP" ? color.lime : color.red
    // clr_sl = trend == "UP" ? color.red  : color.lime
    clr_tp = color.lime    // Always green for TP
    clr_sl = color.red     // Always red for SL

    // Draw lines
    l_tp = line.new(bar_index, tp, bar_index + seg_len, tp, color=clr_tp, width=2)
    l_sl = line.new(bar_index, sl, bar_index + seg_len, sl, color=clr_sl, width=2)

    // Draw labels
    lab_tp = label.new(bar_index, tp, "TP", style=label.style_label_left, color=clr_tp, textcolor=color.white, size=size.tiny)
    lab_sl = label.new(bar_index, sl, "SL", style=label.style_label_left, color=clr_sl, textcolor=color.white, size=size.tiny)

    // Save to arrays
    array.push(tp_lines, l_tp)
    array.push(sl_lines, l_sl)
    array.push(tp_labels, lab_tp)
    array.push(sl_labels, lab_sl)
